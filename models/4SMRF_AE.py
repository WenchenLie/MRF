# --------------------------------------------------------------------------------
# ----------------------------------- 4SMRF_AE -----------------------------------
# -------------------- Generated by: MRFHelper (Version 1.2) ---------------------
# --------------------------------------------------------------------------------
import os
from pathlib import Path
import openseespy.opensees as ops
from ..subroutines.BeamHinge import BeamHinge
from ColumnHinge import ColumnHinge
from PanelZone import PanelZone
from Spring_Zero import Spring_Zero
from Spring_Rigid import Spring_Rigid
from TimeHistorySolver import TimeHistorySolver
import time
from math import pi


ops.wipe()
ops.model("basic", "-ndm", 2, "-ndf", 3)

# Basic model variables
MaxRunTime = 600.0
StartTime = time.time()
RunTime = 0.0
EQ = 1
PO = 0
ShowAnimation = 1

# Ground motion information
MainFolder = Path("H:/MRF_results/test/4SMRF")
GMname = "th5"
SubFolder = "th5"
GMdt = 0.01
GMpoints = 5590
GMduration = 55.89
FVduration = 30
EqSF = 2.0
GMFile = f"F:/MRF/GMs/{GMname}.th"

# Results folders
if not MainFolder.exists():
    os.mkdir(MainFolder)
if not (MainFolder/"EigenAnalysis").exists():
    os.mkdir(MainFolder/"EigenAnalysis")
if not (MainFolder/SubFolder).exists():
    os.mkdir(MainFolder/SubFolder)

# Basic parameters
NStory = 4
NBay = 3
E = 206000.00
mu = 0.3
fy_beam = 345.00
fy_column = 345.00
ops.uniaxialMaterial("Elastic", 9, 1.e-9)
ops.uniaxialMaterial("Elastic", 99, 1.e12)
ops.geomTransf("Linear", 1)
ops.geomTransf("PDelta", 2)
ops.geomTransf("Corotational", 3)
A_Stiff = 1.e8
I_Stiff = 1.e13

# Building geometry
Floor1 = 0.0
Floor2 = 4300.0
Floor3 = 8300.0
Floor4 = 12300.0
Floor5 = 16300.0
story_height = [4300, 4000, 4000, 4000]

Axis1 = 0.0
Axis2 = 6100.0
Axis3 = 12200.0
Axis4 = 18300.0
Axis5 = 24400.0

HBuilding = 16300.0


# ------------------------------------ Nodes -------------------------------------

# Support nodes
ops.node(10010100, Axis1, Floor1)
ops.node(10010200, Axis2, Floor1)
ops.node(10010300, Axis3, Floor1)
ops.node(10010400, Axis4, Floor1)
ops.node(10010500, Axis5, Floor1)

# Leaning column grid nodes
ops.node(10020500, Axis5, Floor2)
ops.node(10030500, Axis5, Floor3)
ops.node(10040500, Axis5, Floor4)
ops.node(10050500, Axis5, Floor5)

# Leaning column connected nodes
ops.node(10020502, Axis5, Floor2)
ops.node(10020501, Axis5, Floor2)
ops.node(10030502, Axis5, Floor3)
ops.node(10030501, Axis5, Floor3)
ops.node(10040502, Axis5, Floor4)
ops.node(10040501, Axis5, Floor4)
ops.node(10050502, Axis5, Floor5)

# Moment frame column nodes
ops.node(10010101, Axis1, Floor1)
ops.node(10010201, Axis2, Floor1)
ops.node(10010301, Axis3, Floor1)
ops.node(10010401, Axis4, Floor1)

ops.node(10020102, Axis1, Floor2 - 538.48/2)
ops.node(10020202, Axis2, Floor2 - 538.48/2)
ops.node(10020302, Axis3, Floor2 - 538.48/2)
ops.node(10020402, Axis4, Floor2 - 538.48/2)

ops.node(10020101, Axis1, Floor2 + 538.48/2)
ops.node(10020201, Axis2, Floor2 + 538.48/2)
ops.node(10020301, Axis3, Floor2 + 538.48/2)
ops.node(10020401, Axis4, Floor2 + 538.48/2)

ops.node(10030102, Axis1, Floor3 - 538.48/2)
ops.node(10030202, Axis2, Floor3 - 538.48/2)
ops.node(10030302, Axis3, Floor3 - 538.48/2)
ops.node(10030402, Axis4, Floor3 - 538.48/2)

ops.node(10030101, Axis1, Floor3 + 538.48/2)
ops.node(10030201, Axis2, Floor3 + 538.48/2)
ops.node(10030301, Axis3, Floor3 + 538.48/2)
ops.node(10030401, Axis4, Floor3 + 538.48/2)

ops.node(10040102, Axis1, Floor4 - 535.94/2)
ops.node(10040202, Axis2, Floor4 - 535.94/2)
ops.node(10040302, Axis3, Floor4 - 535.94/2)
ops.node(10040402, Axis4, Floor4 - 535.94/2)

ops.node(10040101, Axis1, Floor4 + 535.94/2)
ops.node(10040201, Axis2, Floor4 + 535.94/2)
ops.node(10040301, Axis3, Floor4 + 535.94/2)
ops.node(10040401, Axis4, Floor4 + 535.94/2)

ops.node(10050102, Axis1, Floor5 - 535.94/2)
ops.node(10050202, Axis2, Floor5 - 535.94/2)
ops.node(10050302, Axis3, Floor5 - 535.94/2)
ops.node(10050402, Axis4, Floor5 - 535.94/2)


# Moment frame beam nodes
ops.node(10020104, Axis1 + 644.84, Floor2)
ops.node(10020205, Axis2 - 644.84, Floor2)
ops.node(10020204, Axis2 + 644.84, Floor2)
ops.node(10020305, Axis3 - 644.84, Floor2)
ops.node(10020304, Axis3 + 644.84, Floor2)
ops.node(10020405, Axis4 - 644.84, Floor2)

ops.node(10030104, Axis1 + 644.84, Floor3)
ops.node(10030205, Axis2 - 644.84, Floor3)
ops.node(10030204, Axis2 + 644.84, Floor3)
ops.node(10030305, Axis3 - 644.84, Floor3)
ops.node(10030304, Axis3 + 644.84, Floor3)
ops.node(10030405, Axis4 - 644.84, Floor3)

ops.node(10040104, Axis1 + 606.11, Floor4)
ops.node(10040205, Axis2 - 606.11, Floor4)
ops.node(10040204, Axis2 + 606.11, Floor4)
ops.node(10040305, Axis3 - 606.11, Floor4)
ops.node(10040304, Axis3 + 606.11, Floor4)
ops.node(10040405, Axis4 - 606.11, Floor4)

ops.node(10050104, Axis1 + 606.11, Floor5)
ops.node(10050205, Axis2 - 606.11, Floor5)
ops.node(10050204, Axis2 + 606.11, Floor5)
ops.node(10050305, Axis3 - 606.11, Floor5)
ops.node(10050304, Axis3 + 606.11, Floor5)
ops.node(10050405, Axis4 - 606.11, Floor5)


# Beam spring nodes (If RBS length equal zero, beam spring nodes will not be generated)
ops.node(10020103, Axis1 + 644.84, Floor2)
ops.node(10020206, Axis2 - 644.84, Floor2)
ops.node(10020203, Axis2 + 644.84, Floor2)
ops.node(10020306, Axis3 - 644.84, Floor2)
ops.node(10020303, Axis3 + 644.84, Floor2)
ops.node(10020406, Axis4 - 644.84, Floor2)

ops.node(10030103, Axis1 + 644.84, Floor3)
ops.node(10030206, Axis2 - 644.84, Floor3)
ops.node(10030203, Axis2 + 644.84, Floor3)
ops.node(10030306, Axis3 - 644.84, Floor3)
ops.node(10030303, Axis3 + 644.84, Floor3)
ops.node(10030406, Axis4 - 644.84, Floor3)

ops.node(10040103, Axis1 + 606.11, Floor4)
ops.node(10040206, Axis2 - 606.11, Floor4)
ops.node(10040203, Axis2 + 606.11, Floor4)
ops.node(10040306, Axis3 - 606.11, Floor4)
ops.node(10040303, Axis3 + 606.11, Floor4)
ops.node(10040406, Axis4 - 606.11, Floor4)

ops.node(10050103, Axis1 + 606.11, Floor5)
ops.node(10050206, Axis2 - 606.11, Floor5)
ops.node(10050203, Axis2 + 606.11, Floor5)
ops.node(10050306, Axis3 - 606.11, Floor5)
ops.node(10050303, Axis3 + 606.11, Floor5)
ops.node(10050406, Axis4 - 606.11, Floor5)


# Column splice ndoes
ops.node(10030107, Axis1, Floor3 + 0.5 * 4000.00)
ops.node(10030207, Axis2, Floor3 + 0.5 * 4000.00)
ops.node(10030307, Axis3, Floor3 + 0.5 * 4000.00)
ops.node(10030407, Axis4, Floor3 + 0.5 * 4000.00)


# Beam splice ndoes






# ----------------------------------- Elements -----------------------------------

n = 10.

# Column elements
ops.element("elasticBeamColumn", 10010101, 10010101, 10020102, 19548.35, E, (n+1)/n*1248694276.80, 2)
ops.element("elasticBeamColumn", 10010201, 10010201, 10020202, 19548.35, E, (n+1)/n*1248694276.80, 2)
ops.element("elasticBeamColumn", 10010301, 10010301, 10020302, 19548.35, E, (n+1)/n*1248694276.80, 2)
ops.element("elasticBeamColumn", 10010401, 10010401, 10020402, 19548.35, E, (n+1)/n*1248694276.80, 2)

ops.element("elasticBeamColumn", 10020101, 10020101, 10030102, 19548.35, E, (n+1)/n*1248694276.80, 2)
ops.element("elasticBeamColumn", 10020201, 10020201, 10030202, 19548.35, E, (n+1)/n*1248694276.80, 2)
ops.element("elasticBeamColumn", 10020301, 10020301, 10030302, 19548.35, E, (n+1)/n*1248694276.80, 2)
ops.element("elasticBeamColumn", 10020401, 10020401, 10030402, 19548.35, E, (n+1)/n*1248694276.80, 2)

ops.element("elasticBeamColumn", 10030102, 10030101, 10030107, 19548.35, E, (n+1)/n*1248694276.80, 2)
ops.element("elasticBeamColumn", 10030202, 10030201, 10030207, 19548.35, E, (n+1)/n*1248694276.80, 2)
ops.element("elasticBeamColumn", 10030302, 10030301, 10030307, 19548.35, E, (n+1)/n*1248694276.80, 2)
ops.element("elasticBeamColumn", 10030402, 10030401, 10030407, 19548.35, E, (n+1)/n*1248694276.80, 2)

ops.element("elasticBeamColumn", 10030103, 10030107, 10040102, 11741.91, E, (n+1)/n*645158709.68, 2)
ops.element("elasticBeamColumn", 10030203, 10030207, 10040202, 11741.91, E, (n+1)/n*645158709.68, 2)
ops.element("elasticBeamColumn", 10030303, 10030307, 10040302, 11741.91, E, (n+1)/n*645158709.68, 2)
ops.element("elasticBeamColumn", 10030403, 10030407, 10040402, 11741.91, E, (n+1)/n*645158709.68, 2)

ops.element("elasticBeamColumn", 10040101, 10040101, 10050102, 11741.91, E, (n+1)/n*645158709.68, 2)
ops.element("elasticBeamColumn", 10040201, 10040201, 10050202, 11741.91, E, (n+1)/n*645158709.68, 2)
ops.element("elasticBeamColumn", 10040301, 10040301, 10050302, 11741.91, E, (n+1)/n*645158709.68, 2)
ops.element("elasticBeamColumn", 10040401, 10040401, 10050402, 11741.91, E, (n+1)/n*645158709.68, 2)


# Beam elements
ops.element("elasticBeamColumn", 10020104, 10020104, 10020205, 13870.94, E, (n+1)/n*665970280.96, 2)
ops.element("elasticBeamColumn", 10020204, 10020204, 10020305, 13870.94, E, (n+1)/n*665970280.96, 2)
ops.element("elasticBeamColumn", 10020304, 10020304, 10020405, 13870.94, E, (n+1)/n*665970280.96, 2)

ops.element("elasticBeamColumn", 10030104, 10030104, 10030205, 13870.94, E, (n+1)/n*665970280.96, 2)
ops.element("elasticBeamColumn", 10030204, 10030204, 10030305, 13870.94, E, (n+1)/n*665970280.96, 2)
ops.element("elasticBeamColumn", 10030304, 10030304, 10030405, 13870.94, E, (n+1)/n*665970280.96, 2)

ops.element("elasticBeamColumn", 10040104, 10040104, 10040205, 10774.17, E, (n+1)/n*486990767.95, 2)
ops.element("elasticBeamColumn", 10040204, 10040204, 10040305, 10774.17, E, (n+1)/n*486990767.95, 2)
ops.element("elasticBeamColumn", 10040304, 10040304, 10040405, 10774.17, E, (n+1)/n*486990767.95, 2)

ops.element("elasticBeamColumn", 10050104, 10050104, 10050205, 10774.17, E, (n+1)/n*486990767.95, 2)
ops.element("elasticBeamColumn", 10050204, 10050204, 10050305, 10774.17, E, (n+1)/n*486990767.95, 2)
ops.element("elasticBeamColumn", 10050304, 10050304, 10050405, 10774.17, E, (n+1)/n*486990767.95, 2)


# Panel zones
# PanelNone(Floor, Axis, X, Y, E, mu, fy_column, A_stiff, I_stiff, d_col, d_beam, tp, tf, bf, transfTag, type_, position, check=None)
PanelZone(2, 1, Axis1, Floor2, E, mu, fy_column, A_Stiff, I_Stiff, 622.30, 538.48, 13.97, 24.89, 228.60, 2, 1, "L")
PanelZone(2, 2, Axis2, Floor2, E, mu, fy_column, A_Stiff, I_Stiff, 622.30, 538.48, 21.87, 24.89, 228.60, 2, 1, "I")
PanelZone(2, 3, Axis3, Floor2, E, mu, fy_column, A_Stiff, I_Stiff, 622.30, 538.48, 21.87, 24.89, 228.60, 2, 1, "I")
PanelZone(2, 4, Axis4, Floor2, E, mu, fy_column, A_Stiff, I_Stiff, 622.30, 538.48, 13.97, 24.89, 228.60, 2, 1, "R")

PanelZone(3, 1, Axis1, Floor3, E, mu, fy_column, A_Stiff, I_Stiff, 622.30, 538.48, 13.97, 24.89, 228.60, 2, 1, "L")
PanelZone(3, 2, Axis2, Floor3, E, mu, fy_column, A_Stiff, I_Stiff, 622.30, 538.48, 21.87, 24.89, 228.60, 2, 1, "I")
PanelZone(3, 3, Axis3, Floor3, E, mu, fy_column, A_Stiff, I_Stiff, 622.30, 538.48, 21.87, 24.89, 228.60, 2, 1, "I")
PanelZone(3, 4, Axis4, Floor3, E, mu, fy_column, A_Stiff, I_Stiff, 622.30, 538.48, 13.97, 24.89, 228.60, 2, 1, "R")

PanelZone(4, 1, Axis1, Floor4, E, mu, fy_column, A_Stiff, I_Stiff, 601.98, 535.94, 10.92, 14.99, 178.82, 2, 1, "L")
PanelZone(4, 2, Axis2, Floor4, E, mu, fy_column, A_Stiff, I_Stiff, 601.98, 535.94, 18.82, 14.99, 178.82, 2, 1, "I")
PanelZone(4, 3, Axis3, Floor4, E, mu, fy_column, A_Stiff, I_Stiff, 601.98, 535.94, 18.82, 14.99, 178.82, 2, 1, "I")
PanelZone(4, 4, Axis4, Floor4, E, mu, fy_column, A_Stiff, I_Stiff, 601.98, 535.94, 10.92, 14.99, 178.82, 2, 1, "R")

PanelZone(5, 1, Axis1, Floor5, E, mu, fy_column, A_Stiff, I_Stiff, 601.98, 535.94, 10.92, 14.99, 178.82, 2, 1, "LT")
PanelZone(5, 2, Axis2, Floor5, E, mu, fy_column, A_Stiff, I_Stiff, 601.98, 535.94, 18.82, 14.99, 178.82, 2, 1, "T")
PanelZone(5, 3, Axis3, Floor5, E, mu, fy_column, A_Stiff, I_Stiff, 601.98, 535.94, 18.82, 14.99, 178.82, 2, 1, "T")
PanelZone(5, 4, Axis4, Floor5, E, mu, fy_column, A_Stiff, I_Stiff, 601.98, 535.94, 10.92, 14.99, 178.82, 2, 1, "RT")


# RBS elements (If RBS length equal zero, RBS element will not be generated)
ops.element("elasticBeamColumn", 10020105, 11020104, 10020103, 13870.94, E, 665970280.96, 2)
ops.element("elasticBeamColumn", 10020106, 10020206, 11020202, 13870.94, E, 665970280.96, 2)
ops.element("elasticBeamColumn", 10020205, 11020204, 10020203, 13870.94, E, 665970280.96, 2)
ops.element("elasticBeamColumn", 10020206, 10020306, 11020302, 13870.94, E, 665970280.96, 2)
ops.element("elasticBeamColumn", 10020305, 11020304, 10020303, 13870.94, E, 665970280.96, 2)
ops.element("elasticBeamColumn", 10020306, 10020406, 11020402, 13870.94, E, 665970280.96, 2)

ops.element("elasticBeamColumn", 10030105, 11030104, 10030103, 13870.94, E, 665970280.96, 2)
ops.element("elasticBeamColumn", 10030106, 10030206, 11030202, 13870.94, E, 665970280.96, 2)
ops.element("elasticBeamColumn", 10030205, 11030204, 10030203, 13870.94, E, 665970280.96, 2)
ops.element("elasticBeamColumn", 10030206, 10030306, 11030302, 13870.94, E, 665970280.96, 2)
ops.element("elasticBeamColumn", 10030305, 11030304, 10030303, 13870.94, E, 665970280.96, 2)
ops.element("elasticBeamColumn", 10030306, 10030406, 11030402, 13870.94, E, 665970280.96, 2)

ops.element("elasticBeamColumn", 10040105, 11040104, 10040103, 10774.17, E, 486990767.95, 2)
ops.element("elasticBeamColumn", 10040106, 10040206, 11040202, 10774.17, E, 486990767.95, 2)
ops.element("elasticBeamColumn", 10040205, 11040204, 10040203, 10774.17, E, 486990767.95, 2)
ops.element("elasticBeamColumn", 10040206, 10040306, 11040302, 10774.17, E, 486990767.95, 2)
ops.element("elasticBeamColumn", 10040305, 11040304, 10040303, 10774.17, E, 486990767.95, 2)
ops.element("elasticBeamColumn", 10040306, 10040406, 11040402, 10774.17, E, 486990767.95, 2)

ops.element("elasticBeamColumn", 10050105, 11050104, 10050103, 10774.17, E, 486990767.95, 2)
ops.element("elasticBeamColumn", 10050106, 10050206, 11050202, 10774.17, E, 486990767.95, 2)
ops.element("elasticBeamColumn", 10050205, 11050204, 10050203, 10774.17, E, 486990767.95, 2)
ops.element("elasticBeamColumn", 10050206, 10050306, 11050302, 10774.17, E, 486990767.95, 2)
ops.element("elasticBeamColumn", 10050305, 11050304, 10050303, 10774.17, E, 486990767.95, 2)
ops.element("elasticBeamColumn", 10050306, 10050406, 11050402, 10774.17, E, 486990767.95, 2)


# Beam hinges
# BeamHinge(SpringID, NodeI, NodeJ, E, fy_beam, Ix, d, htw, bftf, ry, L, Ls, Lb, My, type_, check=None)
BeamHinge(10020109, 10020103, 10020104, E, fy_beam, 665970280.96, 538.48, 41.14, 5.61, 46.03, 5477.7, 2738.8, 2738.8, 972408377.76, 1)
BeamHinge(10020210, 10020205, 10020206, E, fy_beam, 665970280.96, 538.48, 41.14, 5.61, 46.03, 5477.7, 2738.8, 2738.8, 972408377.76, 1)
BeamHinge(10020209, 10020203, 10020204, E, fy_beam, 665970280.96, 538.48, 41.14, 5.61, 46.03, 5477.7, 2738.8, 2738.8, 972408377.76, 1)
BeamHinge(10020310, 10020305, 10020306, E, fy_beam, 665970280.96, 538.48, 41.14, 5.61, 46.03, 5477.7, 2738.8, 2738.8, 972408377.76, 1)
BeamHinge(10020309, 10020303, 10020304, E, fy_beam, 665970280.96, 538.48, 41.14, 5.61, 46.03, 5477.7, 2738.8, 2738.8, 972408377.76, 1)
BeamHinge(10020410, 10020405, 10020406, E, fy_beam, 665970280.96, 538.48, 41.14, 5.61, 46.03, 5477.7, 2738.8, 2738.8, 972408377.76, 1)

BeamHinge(10030109, 10030103, 10030104, E, fy_beam, 665970280.96, 538.48, 41.14, 5.61, 46.03, 5477.7, 2738.8, 2738.8, 972408377.76, 1)
BeamHinge(10030210, 10030205, 10030206, E, fy_beam, 665970280.96, 538.48, 41.14, 5.61, 46.03, 5477.7, 2738.8, 2738.8, 972408377.76, 1)
BeamHinge(10030209, 10030203, 10030204, E, fy_beam, 665970280.96, 538.48, 41.14, 5.61, 46.03, 5477.7, 2738.8, 2738.8, 972408377.76, 1)
BeamHinge(10030310, 10030305, 10030306, E, fy_beam, 665970280.96, 538.48, 41.14, 5.61, 46.03, 5477.7, 2738.8, 2738.8, 972408377.76, 1)
BeamHinge(10030309, 10030303, 10030304, E, fy_beam, 665970280.96, 538.48, 41.14, 5.61, 46.03, 5477.7, 2738.8, 2738.8, 972408377.76, 1)
BeamHinge(10030410, 10030405, 10030406, E, fy_beam, 665970280.96, 538.48, 41.14, 5.61, 46.03, 5477.7, 2738.8, 2738.8, 972408377.76, 1)

BeamHinge(10040109, 10040103, 10040104, E, fy_beam, 486990767.95, 535.94, 46.42, 5.05, 34.38, 5498.0, 2749.0, 2749.0, 729306283.32, 1)
BeamHinge(10040210, 10040205, 10040206, E, fy_beam, 486990767.95, 535.94, 46.42, 5.05, 34.38, 5498.0, 2749.0, 2749.0, 729306283.32, 1)
BeamHinge(10040209, 10040203, 10040204, E, fy_beam, 486990767.95, 535.94, 46.42, 5.05, 34.38, 5498.0, 2749.0, 2749.0, 729306283.32, 1)
BeamHinge(10040310, 10040305, 10040306, E, fy_beam, 486990767.95, 535.94, 46.42, 5.05, 34.38, 5498.0, 2749.0, 2749.0, 729306283.32, 1)
BeamHinge(10040309, 10040303, 10040304, E, fy_beam, 486990767.95, 535.94, 46.42, 5.05, 34.38, 5498.0, 2749.0, 2749.0, 729306283.32, 1)
BeamHinge(10040410, 10040405, 10040406, E, fy_beam, 486990767.95, 535.94, 46.42, 5.05, 34.38, 5498.0, 2749.0, 2749.0, 729306283.32, 1)

BeamHinge(10050109, 10050103, 10050104, E, fy_beam, 486990767.95, 535.94, 46.42, 5.05, 34.38, 5498.0, 2749.0, 2749.0, 729306283.32, 1)
BeamHinge(10050210, 10050205, 10050206, E, fy_beam, 486990767.95, 535.94, 46.42, 5.05, 34.38, 5498.0, 2749.0, 2749.0, 729306283.32, 1)
BeamHinge(10050209, 10050203, 10050204, E, fy_beam, 486990767.95, 535.94, 46.42, 5.05, 34.38, 5498.0, 2749.0, 2749.0, 729306283.32, 1)
BeamHinge(10050310, 10050305, 10050306, E, fy_beam, 486990767.95, 535.94, 46.42, 5.05, 34.38, 5498.0, 2749.0, 2749.0, 729306283.32, 1)
BeamHinge(10050309, 10050303, 10050304, E, fy_beam, 486990767.95, 535.94, 46.42, 5.05, 34.38, 5498.0, 2749.0, 2749.0, 729306283.32, 1)
BeamHinge(10050410, 10050405, 10050406, E, fy_beam, 486990767.95, 535.94, 46.42, 5.05, 34.38, 5498.0, 2749.0, 2749.0, 729306283.32, 1)


# Column hinges
# Column(SpringID, NodeI, NodeJ, E, Ix, d, htw, ry, L, Lb, My, PPy, SF_PPy, pinned, check=None)
ColumnHinge(10010107, 10010100, 10010101, E, 1248694276.80, 622.30, 39.16, 50.34, 4030.76, 4030.76, 1582990382.40, 0.1062, 1.25, 1)
ColumnHinge(10010207, 10010200, 10010201, E, 1248694276.80, 622.30, 39.16, 50.34, 4030.76, 4030.76, 1582990382.40, 0.0708, 1.25, 1)
ColumnHinge(10010307, 10010300, 10010301, E, 1248694276.80, 622.30, 39.16, 50.34, 4030.76, 4030.76, 1582990382.40, 0.0708, 1.25, 1)
ColumnHinge(10010407, 10010400, 10010401, E, 1248694276.80, 622.30, 39.16, 50.34, 4030.76, 4030.76, 1582990382.40, 0.1062, 1.25, 1)

ColumnHinge(10020108, 10020102, 11020101, E, 1248694276.80, 622.30, 39.16, 50.34, 4030.76, 4030.76, 1582990382.40, 0.1062, 1.25, 1)
ColumnHinge(10020208, 10020202, 11020201, E, 1248694276.80, 622.30, 39.16, 50.34, 4030.76, 4030.76, 1582990382.40, 0.0708, 1.25, 1)
ColumnHinge(10020308, 10020302, 11020301, E, 1248694276.80, 622.30, 39.16, 50.34, 4030.76, 4030.76, 1582990382.40, 0.0708, 1.25, 1)
ColumnHinge(10020408, 10020402, 11020401, E, 1248694276.80, 622.30, 39.16, 50.34, 4030.76, 4030.76, 1582990382.40, 0.1062, 1.25, 1)

ColumnHinge(10020107, 11020103, 10020101, E, 1248694276.80, 622.30, 39.16, 50.34, 3461.52, 3461.52, 1582990382.40, 0.0783, 1.25, 1)
ColumnHinge(10020207, 11020203, 10020201, E, 1248694276.80, 622.30, 39.16, 50.34, 3461.52, 3461.52, 1582990382.40, 0.0522, 1.25, 1)
ColumnHinge(10020307, 11020303, 10020301, E, 1248694276.80, 622.30, 39.16, 50.34, 3461.52, 3461.52, 1582990382.40, 0.0522, 1.25, 1)
ColumnHinge(10020407, 11020403, 10020401, E, 1248694276.80, 622.30, 39.16, 50.34, 3461.52, 3461.52, 1582990382.40, 0.0783, 1.25, 1)

ColumnHinge(10030108, 10030102, 11030101, E, 1248694276.80, 622.30, 39.16, 50.34, 3461.52, 3461.52, 1582990382.40, 0.0783, 1.25, 1)
ColumnHinge(10030208, 10030202, 11030201, E, 1248694276.80, 622.30, 39.16, 50.34, 3461.52, 3461.52, 1582990382.40, 0.0522, 1.25, 1)
ColumnHinge(10030308, 10030302, 11030301, E, 1248694276.80, 622.30, 39.16, 50.34, 3461.52, 3461.52, 1582990382.40, 0.0522, 1.25, 1)
ColumnHinge(10030408, 10030402, 11030401, E, 1248694276.80, 622.30, 39.16, 50.34, 3461.52, 3461.52, 1582990382.40, 0.0783, 1.25, 1)

ColumnHinge(10030107, 11030103, 10030101, E, 1248694276.80, 622.30, 39.16, 50.34, 3462.79, 3462.79, 1582990382.40, 0.0506, 1.25, 1)
ColumnHinge(10030207, 11030203, 10030201, E, 1248694276.80, 622.30, 39.16, 50.34, 3462.79, 3462.79, 1582990382.40, 0.0337, 1.25, 1)
ColumnHinge(10030307, 11030303, 10030301, E, 1248694276.80, 622.30, 39.16, 50.34, 3462.79, 3462.79, 1582990382.40, 0.0337, 1.25, 1)
ColumnHinge(10030407, 11030403, 10030401, E, 1248694276.80, 622.30, 39.16, 50.34, 3462.79, 3462.79, 1582990382.40, 0.0506, 1.25, 1)

ColumnHinge(10040108, 10040102, 11040101, E, 645158709.68, 601.98, 50.05, 34.97, 3462.79, 3462.79, 864991173.24, 0.0843, 1.25, 1)
ColumnHinge(10040208, 10040202, 11040201, E, 645158709.68, 601.98, 50.05, 34.97, 3462.79, 3462.79, 864991173.24, 0.0562, 1.25, 1)
ColumnHinge(10040308, 10040302, 11040301, E, 645158709.68, 601.98, 50.05, 34.97, 3462.79, 3462.79, 864991173.24, 0.0562, 1.25, 1)
ColumnHinge(10040408, 10040402, 11040401, E, 645158709.68, 601.98, 50.05, 34.97, 3462.79, 3462.79, 864991173.24, 0.0843, 1.25, 1)

ColumnHinge(10040107, 11040103, 10040101, E, 645158709.68, 601.98, 50.05, 34.97, 3464.06, 3464.06, 864991173.24, 0.0382, 1.25, 1)
ColumnHinge(10040207, 11040203, 10040201, E, 645158709.68, 601.98, 50.05, 34.97, 3464.06, 3464.06, 864991173.24, 0.0255, 1.25, 1)
ColumnHinge(10040307, 11040303, 10040301, E, 645158709.68, 601.98, 50.05, 34.97, 3464.06, 3464.06, 864991173.24, 0.0255, 1.25, 1)
ColumnHinge(10040407, 11040403, 10040401, E, 645158709.68, 601.98, 50.05, 34.97, 3464.06, 3464.06, 864991173.24, 0.0382, 1.25, 1)

ColumnHinge(10050108, 10050102, 11050101, E, 645158709.68, 601.98, 50.05, 34.97, 3464.06, 3464.06, 864991173.24, 0.0382, 1.25, 1)
ColumnHinge(10050208, 10050202, 11050201, E, 645158709.68, 601.98, 50.05, 34.97, 3464.06, 3464.06, 864991173.24, 0.0255, 1.25, 1)
ColumnHinge(10050308, 10050302, 11050301, E, 645158709.68, 601.98, 50.05, 34.97, 3464.06, 3464.06, 864991173.24, 0.0255, 1.25, 1)
ColumnHinge(10050408, 10050402, 11050401, E, 645158709.68, 601.98, 50.05, 34.97, 3464.06, 3464.06, 864991173.24, 0.0382, 1.25, 1)


# Rigid links
ops.element("truss", 10020404, 11020404, 10020500, A_Stiff, 99)
ops.element("truss", 10030404, 11030404, 10030500, A_Stiff, 99)
ops.element("truss", 10040404, 11040404, 10040500, A_Stiff, 99)
ops.element("truss", 10050404, 11050404, 10050500, A_Stiff, 99)

# Leaning column
ops.element("elasticBeamColumn", 10010501, 10010500, 10020502, A_Stiff, E, I_Stiff, 2)
ops.element("elasticBeamColumn", 10020501, 10020501, 10030502, A_Stiff, E, I_Stiff, 2)
ops.element("elasticBeamColumn", 10030501, 10030501, 10040502, A_Stiff, E, I_Stiff, 2)
ops.element("elasticBeamColumn", 10040501, 10040501, 10050502, A_Stiff, E, I_Stiff, 2)

# Leaning column hinges
Spring_Rigid(10020508, 10020502, 10020500)
Spring_Zero(10020507, 10020500, 10020501)
Spring_Rigid(10030508, 10030502, 10030500)
Spring_Zero(10030507, 10030500, 10030501)
Spring_Rigid(10040508, 10040502, 10040500)
Spring_Zero(10040507, 10040500, 10040501)
Spring_Rigid(10050508, 10050502, 10050500)

# --------------------------------- Constraints ----------------------------------

# Support
ops.fix(10010100, 1, 1, 1)
ops.fix(10010200, 1, 1, 1)
ops.fix(10010300, 1, 1, 1)
ops.fix(10010400, 1, 1, 1)
ops.fix(10010500, 1, 1, 0)

# Soil constraint
# (No soil constraint)

# Rigid diaphragm
ops.equalDOF(11020204, 11020104, 1)
ops.equalDOF(11020204, 11020304, 1)
ops.equalDOF(11020204, 11020404, 1)

ops.equalDOF(11030204, 11030104, 1)
ops.equalDOF(11030204, 11030304, 1)
ops.equalDOF(11030204, 11030404, 1)

ops.equalDOF(11040204, 11040104, 1)
ops.equalDOF(11040204, 11040304, 1)
ops.equalDOF(11040204, 11040404, 1)

ops.equalDOF(11050204, 11050104, 1)
ops.equalDOF(11050204, 11050304, 1)
ops.equalDOF(11050204, 11050404, 1)


# ---------------------------------- Recorders -----------------------------------

# Mode properties
ops.recorder("Node", "-file", str(MainFolder/"EigenAnalysis/EigenVectorsMode1.out"), "-node", 11020204, 11030204, 11040204, 11050204, "-dof", 1, "eigen 1")
ops.recorder("Node", "-file", str(MainFolder/"EigenAnalysis/EigenVectorsMode2.out"), "-node", 11020204, 11030204, 11040204, 11050204, "-dof", 1, "eigen 2")
ops.recorder("Node", "-file", str(MainFolder/"EigenAnalysis/EigenVectorsMode3.out"), "-node", 11020204, 11030204, 11040204, 11050204, "-dof", 1, "eigen 3")
ops.recorder("Node", "-file", str(MainFolder/"EigenAnalysis/EigenVectorsMode4.out"), "-node", 11020204, 11030204, 11040204, 11050204, "-dof", 1, "eigen 4")

# Time
ops.recorder("Node", "-file", str(MainFolder/SubFolder/"Time.out"), "-time", "-node", 10010100, "-dof", 1, "disp")

# Support reactions
ops.recorder("Node", "-file", str(MainFolder/SubFolder/"Support1.out"), "-node", 10010100, "-dof", 1, 2, 3, "reaction")
ops.recorder("Node", "-file", str(MainFolder/SubFolder/"Support2.out"), "-node", 10010200, "-dof", 1, 2, 3, "reaction")
ops.recorder("Node", "-file", str(MainFolder/SubFolder/"Support3.out"), "-node", 10010300, "-dof", 1, 2, 3, "reaction")
ops.recorder("Node", "-file", str(MainFolder/SubFolder/"Support4.out"), "-node", 10010400, "-dof", 1, 2, 3, "reaction")
ops.recorder("Node", "-file", str(MainFolder/SubFolder/"Support5.out"), "-node", 10010500, "-dof", 1, 2, 3, "reaction")

# Story drift ratio
# ops.recorder("Drift", "-file", str(MainFolder/SubFolder/"SDR1.out"), "-iNode", 10010100, "-jNode", 11020204, "-dof", 1, "-perpDirn", 2)
# ops.recorder("Drift", "-file", str(MainFolder/SubFolder/"SDR2.out"), "-iNode", 11020204, "-jNode", 11030204, "-dof", 1, "-perpDirn", 2)
# ops.recorder("Drift", "-file", str(MainFolder/SubFolder/"SDR3.out"), "-iNode", 11030204, "-jNode", 11040204, "-dof", 1, "-perpDirn", 2)
# ops.recorder("Drift", "-file", str(MainFolder/SubFolder/"SDR4.out"), "-iNode", 11040204, "-jNode", 11050204, "-dof", 1, "-perpDirn", 2)
# ops.recorder("Drift", "-file", str(MainFolder/SubFolder/"SDR_Roof.out"), "-iNode", 10010100, "-jNode", 11050204, "-dof", 1, "-perpDirn", 2)

# Floor acceleration
ops.recorder("Node", "-file", str(MainFolder/SubFolder/"RFA1.out"), "-node", 10010100, "-dof", 1, "accel")
ops.recorder("Node", "-file", str(MainFolder/SubFolder/"RFA2.out"), "-node", 11020204, "-dof", 1, "accel")
ops.recorder("Node", "-file", str(MainFolder/SubFolder/"RFA3.out"), "-node", 11030204, "-dof", 1, "accel")
ops.recorder("Node", "-file", str(MainFolder/SubFolder/"RFA4.out"), "-node", 11040204, "-dof", 1, "accel")
ops.recorder("Node", "-file", str(MainFolder/SubFolder/"RFA5.out"), "-node", 11050204, "-dof", 1, "accel")
ops.recorder("Node", "-file", str(MainFolder/SubFolder/"RFV1.out"), "-node", 10010100, "-dof", 1, "vel")
ops.recorder("Node", "-file", str(MainFolder/SubFolder/"RFV2.out"), "-node", 11020204, "-dof", 1, "vel")
ops.recorder("Node", "-file", str(MainFolder/SubFolder/"RFV3.out"), "-node", 11030204, "-dof", 1, "vel")
ops.recorder("Node", "-file", str(MainFolder/SubFolder/"RFV4.out"), "-node", 11040204, "-dof", 1, "vel")
ops.recorder("Node", "-file", str(MainFolder/SubFolder/"RFV5.out"), "-node", 11050204, "-dof", 1, "vel")

# Floor displacement
ops.recorder("Node", "-file", str(MainFolder/SubFolder/"Disp1.out"), "-node", 10010100, "-dof", 1, "disp")
ops.recorder("Node", "-file", str(MainFolder/SubFolder/"Disp2.out"), "-node", 11020204, "-dof", 1, "disp")
ops.recorder("Node", "-file", str(MainFolder/SubFolder/"Disp3.out"), "-node", 11030204, "-dof", 1, "disp")
ops.recorder("Node", "-file", str(MainFolder/SubFolder/"Disp4.out"), "-node", 11040204, "-dof", 1, "disp")
ops.recorder("Node", "-file", str(MainFolder/SubFolder/"Disp5.out"), "-node", 11050204, "-dof", 1, "disp")

# Shear forces
ops.recorder("Element", "-file", str(MainFolder/SubFolder/"Shear1_1.out"), "-ele", 10010101, "force")
ops.recorder("Element", "-file", str(MainFolder/SubFolder/"Shear1_2.out"), "-ele", 10010201, "force")
ops.recorder("Element", "-file", str(MainFolder/SubFolder/"Shear1_3.out"), "-ele", 10010301, "force")
ops.recorder("Element", "-file", str(MainFolder/SubFolder/"Shear1_4.out"), "-ele", 10010401, "force")

ops.recorder("Element", "-file", str(MainFolder/SubFolder/"Shear2_1.out"), "-ele", 10020101, "force")
ops.recorder("Element", "-file", str(MainFolder/SubFolder/"Shear2_2.out"), "-ele", 10020201, "force")
ops.recorder("Element", "-file", str(MainFolder/SubFolder/"Shear2_3.out"), "-ele", 10020301, "force")
ops.recorder("Element", "-file", str(MainFolder/SubFolder/"Shear2_4.out"), "-ele", 10020401, "force")

ops.recorder("Element", "-file", str(MainFolder/SubFolder/"Shear3_1.out"), "-ele", 10030102, "force")
ops.recorder("Element", "-file", str(MainFolder/SubFolder/"Shear3_2.out"), "-ele", 10030202, "force")
ops.recorder("Element", "-file", str(MainFolder/SubFolder/"Shear3_3.out"), "-ele", 10030302, "force")
ops.recorder("Element", "-file", str(MainFolder/SubFolder/"Shear3_4.out"), "-ele", 10030402, "force")

ops.recorder("Element", "-file", str(MainFolder/SubFolder/"Shear4_1.out"), "-ele", 10040101, "force")
ops.recorder("Element", "-file", str(MainFolder/SubFolder/"Shear4_2.out"), "-ele", 10040201, "force")
ops.recorder("Element", "-file", str(MainFolder/SubFolder/"Shear4_3.out"), "-ele", 10040301, "force")
ops.recorder("Element", "-file", str(MainFolder/SubFolder/"Shear4_4.out"), "-ele", 10040401, "force")


# Column springs
ops.recorder("Element", "-file", str(MainFolder/SubFolder/"ColSpring1_1T.out"), "-ele", 10010107, "material", 3, "stressStrain")
ops.recorder("Element", "-file", str(MainFolder/SubFolder/"ColSpring1_2T.out"), "-ele", 10010207, "material", 3, "stressStrain")
ops.recorder("Element", "-file", str(MainFolder/SubFolder/"ColSpring1_3T.out"), "-ele", 10010307, "material", 3, "stressStrain")
ops.recorder("Element", "-file", str(MainFolder/SubFolder/"ColSpring1_4T.out"), "-ele", 10010407, "material", 3, "stressStrain")

ops.recorder("Element", "-file", str(MainFolder/SubFolder/"ColSpring2_1B.out"), "-ele", 10020108, "material", 3, "stressStrain")
ops.recorder("Element", "-file", str(MainFolder/SubFolder/"ColSpring2_2B.out"), "-ele", 10020208, "material", 3, "stressStrain")
ops.recorder("Element", "-file", str(MainFolder/SubFolder/"ColSpring2_3B.out"), "-ele", 10020308, "material", 3, "stressStrain")
ops.recorder("Element", "-file", str(MainFolder/SubFolder/"ColSpring2_4B.out"), "-ele", 10020408, "material", 3, "stressStrain")

ops.recorder("Element", "-file", str(MainFolder/SubFolder/"ColSpring2_1T.out"), "-ele", 10020107, "material", 3, "stressStrain")
ops.recorder("Element", "-file", str(MainFolder/SubFolder/"ColSpring2_2T.out"), "-ele", 10020207, "material", 3, "stressStrain")
ops.recorder("Element", "-file", str(MainFolder/SubFolder/"ColSpring2_3T.out"), "-ele", 10020307, "material", 3, "stressStrain")
ops.recorder("Element", "-file", str(MainFolder/SubFolder/"ColSpring2_4T.out"), "-ele", 10020407, "material", 3, "stressStrain")

ops.recorder("Element", "-file", str(MainFolder/SubFolder/"ColSpring3_1B.out"), "-ele", 10030108, "material", 3, "stressStrain")
ops.recorder("Element", "-file", str(MainFolder/SubFolder/"ColSpring3_2B.out"), "-ele", 10030208, "material", 3, "stressStrain")
ops.recorder("Element", "-file", str(MainFolder/SubFolder/"ColSpring3_3B.out"), "-ele", 10030308, "material", 3, "stressStrain")
ops.recorder("Element", "-file", str(MainFolder/SubFolder/"ColSpring3_4B.out"), "-ele", 10030408, "material", 3, "stressStrain")

ops.recorder("Element", "-file", str(MainFolder/SubFolder/"ColSpring3_1T.out"), "-ele", 10030107, "material", 3, "stressStrain")
ops.recorder("Element", "-file", str(MainFolder/SubFolder/"ColSpring3_2T.out"), "-ele", 10030207, "material", 3, "stressStrain")
ops.recorder("Element", "-file", str(MainFolder/SubFolder/"ColSpring3_3T.out"), "-ele", 10030307, "material", 3, "stressStrain")
ops.recorder("Element", "-file", str(MainFolder/SubFolder/"ColSpring3_4T.out"), "-ele", 10030407, "material", 3, "stressStrain")

ops.recorder("Element", "-file", str(MainFolder/SubFolder/"ColSpring4_1B.out"), "-ele", 10040108, "material", 3, "stressStrain")
ops.recorder("Element", "-file", str(MainFolder/SubFolder/"ColSpring4_2B.out"), "-ele", 10040208, "material", 3, "stressStrain")
ops.recorder("Element", "-file", str(MainFolder/SubFolder/"ColSpring4_3B.out"), "-ele", 10040308, "material", 3, "stressStrain")
ops.recorder("Element", "-file", str(MainFolder/SubFolder/"ColSpring4_4B.out"), "-ele", 10040408, "material", 3, "stressStrain")

ops.recorder("Element", "-file", str(MainFolder/SubFolder/"ColSpring4_1T.out"), "-ele", 10040107, "material", 3, "stressStrain")
ops.recorder("Element", "-file", str(MainFolder/SubFolder/"ColSpring4_2T.out"), "-ele", 10040207, "material", 3, "stressStrain")
ops.recorder("Element", "-file", str(MainFolder/SubFolder/"ColSpring4_3T.out"), "-ele", 10040307, "material", 3, "stressStrain")
ops.recorder("Element", "-file", str(MainFolder/SubFolder/"ColSpring4_4T.out"), "-ele", 10040407, "material", 3, "stressStrain")

ops.recorder("Element", "-file", str(MainFolder/SubFolder/"ColSpring5_1B.out"), "-ele", 10050108, "material", 3, "stressStrain")
ops.recorder("Element", "-file", str(MainFolder/SubFolder/"ColSpring5_2B.out"), "-ele", 10050208, "material", 3, "stressStrain")
ops.recorder("Element", "-file", str(MainFolder/SubFolder/"ColSpring5_3B.out"), "-ele", 10050308, "material", 3, "stressStrain")
ops.recorder("Element", "-file", str(MainFolder/SubFolder/"ColSpring5_4B.out"), "-ele", 10050408, "material", 3, "stressStrain")


# Beam springs
ops.recorder("Element", "-file", str(MainFolder/SubFolder/"BeamSpring2_1R.out"), "-ele", 10020109, "material", 3, "stressStrain")
ops.recorder("Element", "-file", str(MainFolder/SubFolder/"BeamSpring2_2L.out"), "-ele", 10020210, "material", 3, "stressStrain")
ops.recorder("Element", "-file", str(MainFolder/SubFolder/"BeamSpring2_2R.out"), "-ele", 10020209, "material", 3, "stressStrain")
ops.recorder("Element", "-file", str(MainFolder/SubFolder/"BeamSpring2_3L.out"), "-ele", 10020310, "material", 3, "stressStrain")
ops.recorder("Element", "-file", str(MainFolder/SubFolder/"BeamSpring2_3R.out"), "-ele", 10020309, "material", 3, "stressStrain")
ops.recorder("Element", "-file", str(MainFolder/SubFolder/"BeamSpring2_4L.out"), "-ele", 10020410, "material", 3, "stressStrain")

ops.recorder("Element", "-file", str(MainFolder/SubFolder/"BeamSpring3_1R.out"), "-ele", 10030109, "material", 3, "stressStrain")
ops.recorder("Element", "-file", str(MainFolder/SubFolder/"BeamSpring3_2L.out"), "-ele", 10030210, "material", 3, "stressStrain")
ops.recorder("Element", "-file", str(MainFolder/SubFolder/"BeamSpring3_2R.out"), "-ele", 10030209, "material", 3, "stressStrain")
ops.recorder("Element", "-file", str(MainFolder/SubFolder/"BeamSpring3_3L.out"), "-ele", 10030310, "material", 3, "stressStrain")
ops.recorder("Element", "-file", str(MainFolder/SubFolder/"BeamSpring3_3R.out"), "-ele", 10030309, "material", 3, "stressStrain")
ops.recorder("Element", "-file", str(MainFolder/SubFolder/"BeamSpring3_4L.out"), "-ele", 10030410, "material", 3, "stressStrain")

ops.recorder("Element", "-file", str(MainFolder/SubFolder/"BeamSpring4_1R.out"), "-ele", 10040109, "material", 3, "stressStrain")
ops.recorder("Element", "-file", str(MainFolder/SubFolder/"BeamSpring4_2L.out"), "-ele", 10040210, "material", 3, "stressStrain")
ops.recorder("Element", "-file", str(MainFolder/SubFolder/"BeamSpring4_2R.out"), "-ele", 10040209, "material", 3, "stressStrain")
ops.recorder("Element", "-file", str(MainFolder/SubFolder/"BeamSpring4_3L.out"), "-ele", 10040310, "material", 3, "stressStrain")
ops.recorder("Element", "-file", str(MainFolder/SubFolder/"BeamSpring4_3R.out"), "-ele", 10040309, "material", 3, "stressStrain")
ops.recorder("Element", "-file", str(MainFolder/SubFolder/"BeamSpring4_4L.out"), "-ele", 10040410, "material", 3, "stressStrain")

ops.recorder("Element", "-file", str(MainFolder/SubFolder/"BeamSpring5_1R.out"), "-ele", 10050109, "material", 3, "stressStrain")
ops.recorder("Element", "-file", str(MainFolder/SubFolder/"BeamSpring5_2L.out"), "-ele", 10050210, "material", 3, "stressStrain")
ops.recorder("Element", "-file", str(MainFolder/SubFolder/"BeamSpring5_2R.out"), "-ele", 10050209, "material", 3, "stressStrain")
ops.recorder("Element", "-file", str(MainFolder/SubFolder/"BeamSpring5_3L.out"), "-ele", 10050310, "material", 3, "stressStrain")
ops.recorder("Element", "-file", str(MainFolder/SubFolder/"BeamSpring5_3R.out"), "-ele", 10050309, "material", 3, "stressStrain")
ops.recorder("Element", "-file", str(MainFolder/SubFolder/"BeamSpring5_4L.out"), "-ele", 10050410, "material", 3, "stressStrain")


# Panel zone springs (if any)
ops.recorder("Element", "-file", str(MainFolder/SubFolder/"PZ2_1.out"), "-ele", 11020100, "material", 1, "stressStrain")
ops.recorder("Element", "-file", str(MainFolder/SubFolder/"PZ2_2.out"), "-ele", 11020200, "material", 1, "stressStrain")
ops.recorder("Element", "-file", str(MainFolder/SubFolder/"PZ2_3.out"), "-ele", 11020300, "material", 1, "stressStrain")
ops.recorder("Element", "-file", str(MainFolder/SubFolder/"PZ2_4.out"), "-ele", 11020400, "material", 1, "stressStrain")

ops.recorder("Element", "-file", str(MainFolder/SubFolder/"PZ3_1.out"), "-ele", 11030100, "material", 1, "stressStrain")
ops.recorder("Element", "-file", str(MainFolder/SubFolder/"PZ3_2.out"), "-ele", 11030200, "material", 1, "stressStrain")
ops.recorder("Element", "-file", str(MainFolder/SubFolder/"PZ3_3.out"), "-ele", 11030300, "material", 1, "stressStrain")
ops.recorder("Element", "-file", str(MainFolder/SubFolder/"PZ3_4.out"), "-ele", 11030400, "material", 1, "stressStrain")

ops.recorder("Element", "-file", str(MainFolder/SubFolder/"PZ4_1.out"), "-ele", 11040100, "material", 1, "stressStrain")
ops.recorder("Element", "-file", str(MainFolder/SubFolder/"PZ4_2.out"), "-ele", 11040200, "material", 1, "stressStrain")
ops.recorder("Element", "-file", str(MainFolder/SubFolder/"PZ4_3.out"), "-ele", 11040300, "material", 1, "stressStrain")
ops.recorder("Element", "-file", str(MainFolder/SubFolder/"PZ4_4.out"), "-ele", 11040400, "material", 1, "stressStrain")

ops.recorder("Element", "-file", str(MainFolder/SubFolder/"PZ5_1.out"), "-ele", 11050100, "material", 1, "stressStrain")
ops.recorder("Element", "-file", str(MainFolder/SubFolder/"PZ5_2.out"), "-ele", 11050200, "material", 1, "stressStrain")
ops.recorder("Element", "-file", str(MainFolder/SubFolder/"PZ5_3.out"), "-ele", 11050300, "material", 1, "stressStrain")
ops.recorder("Element", "-file", str(MainFolder/SubFolder/"PZ5_4.out"), "-ele", 11050400, "material", 1, "stressStrain")


# ------------------------------------- Mass -------------------------------------

# Moment frame mass
g = 9810.0
ops.mass(11020104, 16.895, 1.e-9, 1.e-9)
ops.mass(11020204, 11.263, 1.e-9, 1.e-9)
ops.mass(11020304, 11.263, 1.e-9, 1.e-9)
ops.mass(11020404, 16.895, 1.e-9, 1.e-9)

ops.mass(11030104, 16.727, 1.e-9, 1.e-9)
ops.mass(11030204, 11.151, 1.e-9, 1.e-9)
ops.mass(11030304, 11.151, 1.e-9, 1.e-9)
ops.mass(11030404, 16.727, 1.e-9, 1.e-9)

ops.mass(11040104, 16.727, 1.e-9, 1.e-9)
ops.mass(11040204, 11.151, 1.e-9, 1.e-9)
ops.mass(11040304, 11.151, 1.e-9, 1.e-9)
ops.mass(11040404, 16.727, 1.e-9, 1.e-9)

ops.mass(11050104, 14.486, 1.e-9, 1.e-9)
ops.mass(11050204, 9.657, 1.e-9, 1.e-9)
ops.mass(11050304, 9.657, 1.e-9, 1.e-9)
ops.mass(11050404, 14.486, 1.e-9, 1.e-9)


# Leaning column mass
ops.mass(10020500, 266.601, 1.e-9, 1.e-9)
ops.mass(10030500, 265.817, 1.e-9, 1.e-9)
ops.mass(10040500, 265.817, 1.e-9, 1.e-9)
ops.mass(10050500, 255.360, 1.e-9, 1.e-9)


# -------------------------------- Eigen analysis --------------------------------

nEigen = 4
lambdaN = ops.eigen(nEigen)
lambda1 = lambdaN[0]
lambda2 = lambdaN[1]
lambda3 = lambdaN[2]
lambda4 = lambdaN[3]
w1 = pow(lambda1, 0.5)
w2 = pow(lambda2, 0.5)
w3 = pow(lambda3, 0.5)
w4 = pow(lambda4, 0.5)
T1 = round(2.0*pi/w1, 3)
T2 = round(2.0*pi/w2, 3)
T3 = round(2.0*pi/w3, 3)
T4 = round(2.0*pi/w4, 3)
print(f"T1 = {T1} s")
print(f"T2 = {T2} s")
print(f"T3 = {T3} s")

with open(MainFolder/"EigenAnalysis/EigenPeriod.out", "w") as f:
    f.write(f"{T1}\n")
    f.write(f"{T2}\n")
    f.write(f"{T3}\n")
    f.write(f"{T4}\n")


# --------------------------- Static gravity analysis ----------------------------

ops.timeSeries("Linear", 100)
ops.pattern("Plain", 100, 100)

# Moment frame loads
ops.load(11020101, 0., -188314.9, 0.)
ops.load(11020201, 0., -125543.6, 0.)
ops.load(11020301, 0., -125543.6, 0.)
ops.load(11020401, 0., -188314.9, 0.)

ops.load(11030101, 0., -186667.9, 0.)
ops.load(11030201, 0., -124445.6, 0.)
ops.load(11030301, 0., -124445.6, 0.)
ops.load(11030401, 0., -186667.9, 0.)

ops.load(11040101, 0., -186667.9, 0.)
ops.load(11040201, 0., -124445.6, 0.)
ops.load(11040301, 0., -124445.6, 0.)
ops.load(11040401, 0., -186667.9, 0.)

ops.load(11050101, 0., -154661.2, 0.)
ops.load(11050201, 0., -103107.8, 0.)
ops.load(11050301, 0., -103107.8, 0.)
ops.load(11050401, 0., -154661.2, 0.)


# gravity frame loads
ops.load(10020500, 0., -3078215.5, 0.)
ops.load(10030500, 0., -3070145.2, 0.)
ops.load(10040500, 0., -3070145.2, 0.)
ops.load(10050500, 0., -2761607.2, 0.)

ops.wipeAnalysis()
ops.constraints("Plain")
ops.numberer("RCM")
ops.system("BandGeneral")
ops.test("NormDispIncr", 1.0e-5, 60)
ops.algorithm("Newton")
ops.integrator("LoadControl", 0.1)
ops.analysis("Static")
ops.analyze(10)
ops.loadConst("-time", 0.0)


# ---------------------------- Time history analysis -----------------------------


if EQ == 1:
    
    # Rayleigh damping
    zeta = 0.02
    a0 = zeta * 2.0 * w1 * w3 / (w1 + w3)
    a1 = zeta * 2.0 / (w1 + w3)
    a1_mod = a1 * (1.0 + n) / n
    beam_Ids = [10020104, 10020204, 10020304, 10030104, 10030204, 10030304, 10040104, 10040204, 10040304, 10050104, 10050204, 10050304]
    column_Ids = [10010101, 10010201, 10010301, 10010401, 10020101, 10020201, 10020301, 10020401, 10030102, 10030103, 10030202, 10030203, 10030302, 10030303, 10030402, 10030403, 10040101, 10040201, 10040301, 10040401]
    mass_Ids = [11020104, 11020204, 11020304, 11020404, 11030104, 11030204, 11030304, 11030404, 11040104, 11040204, 11040304, 11040404, 11050104, 11050204, 11050304, 11050404, 10020500, 10030500, 10040500, 10050500]
    # ops.region(1, "-ele", *beam_Ids, "-rayleigh", 0.0, 0.0, a1_mod, 0.0)
    # ops.region(2, "-ele", *column_Ids, "-rayleigh", 0.0, 0.0, a1_mod, 0.0)
    # ops.region(3, "-ele", *mass_Ids, "-rayleigh", a0, 0.0, 0.0, 0.0)
    ops.rayleigh(a0, 0.0, a1, 0.0)
    
    # Ground motion acceleration file input
    ops.timeSeries("Path", 200, "-dt", GMdt, "-filePath", GMFile, "-factor", EqSF * g)
    ops.pattern("UniformExcitation", 200, 1, "-accel", 200)
    MF_FloorNodes = [11020204, 11030204, 11040204, 11050204]
    GMduration = GMdt * GMpoints
    NumSteps = int((GMduration + FVduration) / GMdt)
    totalTime = GMdt * NumSteps
    dtAnalysis = 1.0 * GMdt
    ctrl_nodes = [11020204, 11030204, 11040204, 11050204]
    TimeHistorySolver(GMdt, totalTime, story_height, ctrl_nodes, 0.1, 0.5, GMname, 600)
# ------------------------------ Pushover analysis -------------------------------

if PO == 1:

    m2 = 322.918
    m3 = 321.573
    m4 = 321.573
    m5 = 303.647

    with open(MainFolder/"EigenAnalysis/EigenVectorsMode1.out", "r") as f:
        mode_list = f.readlines()[0].split()
        mode_list = [float(i) for i in mode_list]
    F2 = m2 * mode_list[0]
    F3 = m3 * mode_list[1]
    F4 = m4 * mode_list[2]
    F5 = m5 * mode_list[3]
    ops.timeSeries("Linear", 222)
    ops.pattern("Plain", 222, 222)
    ops.load(11020204, F2, 0.0, 0.0)
    ops.load(11030204, F3, 0.0, 0.0)
    ops.load(11040204, F4, 0.0, 0.0)
    ops.load(11050204, F5, 0.0, 0.0)
    CtrlNode = 11050204
    maxRoofDrift = 0.1
    Dmax = maxRoofDrift * Floor5
    Dincr = 0.5
    maxRunTime = 600.0
    result = PushoverAnalysis(CtrlNode, Dmax, Dincr, maxRunTime)
    status = result[0]
    roofDisp = result[1]
    print(f"Running status: {status}")
    print(f"Roof displacement: {roofDisp}")
    print(f"Roof drift ratio: {roofDisp / HBuilding}")